值类型直接分配在栈上；
引用类型：对象的引用在栈上，对象本身在堆上。
类实例化对象，该对象是类的一个引用。对象里面存放的是引用类型存放的地址。
例如：
	class MM{public int age;}
	MM a,b;
	a=new MM();
	a.age=12;
	b=a;                    //相当于把存放类的地址传递给了b对象。a和b同时指向同一个地址。
	a.age=13;
	console.writeline(b.age);//结果会输出13
装箱和拆箱：
	装箱：值类型转换成引用类型。就是把值类型封装成类。
	拆箱：引用类型转换为值类型。
泛型：
	在定义一个类型时，使用另一个或几个类型作为参数，类型参数用<>围住，放在所定义的类型名后面。
	使用带有类型参数的泛型类型时，参数具体类型指定。
	class Stack<T> {
	private T[] m_ItemArray;
	}
	使用这个类：
	Stack<指定类型> s=new Stack<指定类型>();//在使用的使用需要在实例化类的时候指定类型。
	
集合：
	数组是引用类型。